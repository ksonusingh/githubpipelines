# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
 # push:
  #  branches: [ "main" ]
 # pull_request:
 #   branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs : 
      tfaction : 
        description : "Terraform Action"
        required : true
        default : "apply"
        type : choice
        options :
         - "apply"
         - "destroy"
permissions:
  contents: 'read'
  id-token: 'write'
                  
          

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Setup terraform CLI with TF_API_TOKEN
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.2
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      # Initialize terraform
      - name: Terraform Init
        run: terraform  init
        working-directory: tfroot # this is directory where all terraform files are

# Generates an execution plan for Terraform
      - name: Terraform Plan
        run: terraform  plan -input=false
        working-directory: tfroot
# Apply the plan if apply parameter selected during run.
      - name: Terraform Apply
        if: ${{ github.event.inputs.TFACTION == 'apply' }}
        run: terraform  apply --auto-approve -input=false
        working-directory: tfroot
# Destroy the infra if destroy parameter selected during run.
      - name: Terraform Destroy
        if: ${{ github.event.inputs.TFACTION == 'destroy' }}
        run: terraform destroy --auto-approve -input=false
        working-directory: tfroot

      
          echo Add other actions to build,
          echo test, and deploy your project.
